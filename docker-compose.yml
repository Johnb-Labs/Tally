# Tally Contact Management System - Docker Compose Configuration
# Alternative deployment method using Docker containers

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: tally-postgres
    environment:
      POSTGRES_DB: tally
      POSTGRES_USER: tally
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_this_password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - tally-network
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tally -d tally"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Tally Application
  tally-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tally-app
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://tally:${POSTGRES_PASSWORD:-change_this_password}@postgres:5432/tally
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: tally
      PGUSER: tally
      PGPASSWORD: ${POSTGRES_PASSWORD:-change_this_password}
      SESSION_SECRET: ${SESSION_SECRET:-your-super-secret-session-key}
      REPL_ID: ${REPL_ID}
      REPLIT_DOMAINS: ${REPLIT_DOMAINS}
      ISSUER_URL: ${ISSUER_URL:-https://replit.com/oidc}
    volumes:
      - uploads_data:/app/uploads
      - app_logs:/app/logs
    networks:
      - tally-network
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: tally-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - tally-network
    depends_on:
      - tally-app
    restart: unless-stopped

  # Redis for Session Store (Optional)
  redis:
    image: redis:7-alpine
    container_name: tally-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - tally-network
    ports:
      - "6379:6379"
    restart: unless-stopped

networks:
  tally-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local
  redis_data:
    driver: local